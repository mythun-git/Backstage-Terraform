apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-template
  title: Terraform Tempalte for AWS S3
  description: My Example discription here
spec:
  owner: mythun-git
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Enter the resource name
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the resource
          ui:autofocus: true
          ui:options:
            rows: 5
            
    - title: Fill Bucket Details
      required:
        - bucketName
      properties:
        bucketName:
          title: Bucket Name
          type: string
          description: Enter the Name of the Bucket
          ui:autofocus: true
          ui:options:
            rows: 5
        bucketRegion:
          title: AWS Region
          type: string
          description: The AWS region where the S3 will be deployed
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          bucketName: ${{ parameters.bucketName }}
          bucketRegion: ${{ parameters.bucketRegion }}

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
  
